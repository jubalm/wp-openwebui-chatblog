name: Terraform Platform

on:
  push:
    paths:
      - 'terraform/platform/**'
      - '.github/workflows/terraform-platform.yml'

jobs:
  plan:
    runs-on: ubuntu-latest
    env:
      TF_VAR_ionos_token: ${{ secrets.IONOS_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_s3_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_s3_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AUTHENTIK_SECRET_KEY: ${{ secrets.AUTHENTIK_SECRET_KEY }}
      AUTHENTIK_ADMIN_PASSWORD: ${{ secrets.AUTHENTIK_ADMIN_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: terraform -chdir=terraform/platform init
      - name: Install IONOS CLI
        run: |
          curl -sL https://github.com/ionos-cloud/ionosctl/releases/download/v6.8.5/ionosctl-6.8.5-linux-amd64.tar.gz | sudo tar -xzf - -C /usr/local/bin
      - name: Get kubeconfig from IONOS
        env:
          IONOS_TOKEN: ${{ secrets.IONOS_TOKEN }}
        run: |
          ionosctl login --token "$IONOS_TOKEN"
          ionosctl k8s kubeconfig get --cluster-id <YOUR_CLUSTER_ID> > $HOME/.kube/config
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
      - name: Render Authentik Helm values
        run: bash charts/authentik/render-values.sh
      - name: Create/Update OpenAI API Key Secret
        run: |
          kubectl create secret generic openai-api-key \
            --from-literal=api-key="${{ secrets.OPENAI_API_KEY }}" \
            --namespace=admin-apps \
            --dry-run=client -o yaml | kubectl apply -f -
      - name: Terraform Plan
        run: terraform -chdir=terraform/platform plan

  apply:
    needs: plan
    runs-on: ubuntu-latest
    environment: platform-approval
    env:
      TF_VAR_ionos_token: ${{ secrets.IONOS_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_s3_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_s3_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AUTHENTIK_SECRET_KEY: ${{ secrets.AUTHENTIK_SECRET_KEY }}
      AUTHENTIK_ADMIN_PASSWORD: ${{ secrets.AUTHENTIK_ADMIN_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0
      - name: Terraform Init
        run: terraform -chdir=terraform/platform init
      - name: Install IONOS CLI
        run: |
          curl -sL https://github.com/ionos-cloud/ionosctl/releases/download/v6.8.5/ionosctl-6.8.5-linux-amd64.tar.gz | sudo tar -xzf - -C /usr/local/bin
      - name: Get kubeconfig from IONOS
        env:
          IONOS_TOKEN: ${{ secrets.IONOS_TOKEN }}
        run: |
          ionosctl login --token "$IONOS_TOKEN"
          ionosctl k8s kubeconfig get --cluster-id <YOUR_CLUSTER_ID> > $HOME/.kube/config
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
      - name: Render Authentik Helm values
        run: bash charts/authentik/render-values.sh
      - name: Create/Update OpenAI API Key Secret
        run: |
          kubectl create secret generic openai-api-key \
            --from-literal=api-key="${{ secrets.OPENAI_API_KEY }}" \
            --namespace=admin-apps \
            --dry-run=client -o yaml | kubectl apply -f -
      - name: Terraform Apply
        run: terraform -chdir=terraform/platform apply -auto-approve 